<Window x:Class="WPFLab2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFLab2"
        mc:Ignorable="d"
        Title="Employees Management" FontSize="14" Height="450" Width="800">
    <Window.Resources>
        <local:NameConvertor x:Key="getName"/>
        <local:VisibilityConvertor x:Key="getVisibility"/>
        <local:ValidationErrorConverter x:Key="ifErrorThenValidate"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="5,3.5"/>
            <Setter Property="Padding" Value="8, 2"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="Label" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Padding" Value="5,0"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
        </Style>
        <Style x:Key="Value" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Padding" Value="5,0"/>
            <Setter Property="Margin" Value="0,0,25,20"/>
        </Style>
        <Style x:Key="ComboValue" TargetType="{x:Type ComboBox}" >
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,-4.5,0,20"/>
        </Style>
        <Style x:Key="Input" TargetType="{x:Type TextBox}" >
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,-4.5,0,20"/>
        </Style>

        <DataTemplate x:Key="Default" DataType="local:Employee">
            <ComboBox 
            ItemsSource="{Binding Source={StaticResource ResourceKey=RolesList}}"
            SelectedItem="{Binding CompanyRole, Mode=TwoWay}" 
            Style="{StaticResource ComboValue}"/>
        </DataTemplate>
        <DataTemplate x:Key="CEO">
            <TextBlock Text="CEO" Style="{StaticResource Value}"/>
        </DataTemplate>
        <local:CompanyRoleDataTemplateSelector x:Key="CompanyRoleDataTemplateSelector" DefaultTemplate="{StaticResource Default}" CEOTemplate="{StaticResource CEO}"/>
        <DataTemplate x:Key="default" DataType="{x:Type local:Employee}">
            <GroupBox>
                <GroupBox.Header>
                    <MultiBinding Converter="{StaticResource getName}">
                        <Binding Path="FirstName"/>
                        <Binding Path="LastName"/>
                    </MultiBinding>
                </GroupBox.Header>
                <Grid Margin="10,10,10,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="45"/>
                        <RowDefinition/>
                        <RowDefinition Height="45"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Sex:" Style="{StaticResource Label}"/>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Sex}" Style="{StaticResource Value}"/>
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Birth Date:" Style="{StaticResource Label}"/>
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding BirthDate.Date, StringFormat={}dd.MM.yyyy}" Style="{StaticResource Value}"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Company Role:" Style="{StaticResource Label}"/>
                    <ContentControl Grid.Row="0" Grid.Column="3" Content="{Binding}" ContentTemplateSelector="{StaticResource CompanyRoleDataTemplateSelector}"/>
                    <TextBlock Grid.Row="2" Grid.Column="2" Text="Birth Country:" Style="{StaticResource Label}"/>
                    <TextBlock Grid.Row="2" Grid.Column="3" Width="150" TextTrimming="CharacterEllipsis" Text="{Binding BirthCountry}" Style="{StaticResource Value}"/>
                    <TextBlock Grid.Row="0" Grid.Column="4" Text="Salary:" Style="{StaticResource Label}"/>
                    <TextBox Name="input" AutomationProperties.Name="in" Grid.Row="0" Grid.Column="5" Style="{StaticResource Input}">
                        <TextBox.Text>
                            <Binding Path="Salary" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <local:MinSalaryValidation/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <StackPanel Margin="0,-10,0,15" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="1"  Grid.ColumnSpan="6" >
                        <TextBlock
                            Foreground="Red"
                            Visibility="{Binding ElementName=input, 
                            Path=(Validation.HasError), 
                            Converter={StaticResource getVisibility}}">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource ifErrorThenValidate}">
                                    <Binding ElementName="input" Path="(Validation.HasError)" />
                                    <Binding ElementName="input" Path="(Validation.Errors)" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                    <TextBlock Grid.Row="2" Grid.Column="4"  Text="Salary Currency:" Style="{StaticResource Label}"/>
                    <ComboBox 
                        Grid.Row="2"
                        Grid.Column="5" 
                        ItemsSource="{Binding Source={StaticResource ResourceKey=CurrencyList}}" 
                        SelectedItem="{Binding SalaryCurrency, Mode=TwoWay}"
                        Style="{StaticResource ComboValue}"/>
                </Grid>
            </GroupBox>
        </DataTemplate>
        <Style TargetType="ListViewItem">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform Angle="0"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="-2" Duration="0:0:0.01" />
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" BeginTime="0:0:0.01" From="-2" To="2" Duration="0:0:0.02" AutoReverse="True" RepeatBehavior="2" />
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" BeginTime="0:0:0.13" To="0" Duration="0:0:0.01"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
                      
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Open file..." Click="MenuItem_Click"/>
                <MenuItem Header="Save" Click="Save"/>
                <MenuItem Header="Save file..." Click="SaveFile"/>
                <Separator/>
                <MenuItem Header="Close" Click="Close"/>
            </MenuItem>
        </Menu>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <ListView 
                Name="EmployeeList"
                ScrollViewer.HorizontalScrollBarVisibility="Auto" 
                ScrollViewer.VerticalScrollBarVisibility="Auto" 
                ScrollViewer.CanContentScroll="False"
                ScrollViewer.IsDeferredScrollingEnabled="True"
                Grid.Column="1" 
                ItemsSource="{Binding}" 
                ItemTemplate="{StaticResource ResourceKey=default}"
                HorizontalContentAlignment="Stretch">
                <ListView.ItemsPanel>
                     <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
            <StackPanel Grid.Column="2" HorizontalAlignment="Left">
                <Button Click="MoveUp" Content="&#x2191;" />
                <Button Click="MoveDown" Content="&#x2193;" />
                <Button Click="AddEmployee" Content="Add new employee"/>
                <Button Click="RemoveEmployee" Content="Delete employee"/>
            </StackPanel>
        </Grid>
    </DockPanel>
</Window>
